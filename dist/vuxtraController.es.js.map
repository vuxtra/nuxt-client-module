{"version":3,"file":"vuxtraController.es.js","sources":["../node_modules/@vuxtra/shared-core/lib/core/request.js","../node_modules/@vuxtra/shared-core/lib/core/serviceRequest.js","../node_modules/@vuxtra/shared-core/lib/core/response.js","../node_modules/@vuxtra/shared-core/lib/core/serviceResponse.js","../lib/vuxtraController.js"],"sourcesContent":["export default class Request {\n    constructor (rawRequest = null) {\n        this._messageType = 'req'\n        if (rawRequest === null) {\n            rawRequest = {}\n        }\n        this.meta   = (typeof rawRequest.meta !== 'undefined' && rawRequest.meta !== null ? rawRequest.meta : {})\n        this.data   = (typeof rawRequest.data !== 'undefined' ? rawRequest.data : null)\n        this.id     = (typeof rawRequest.id !== 'undefined' ? rawRequest.id : null)\n        this.type   = (typeof rawRequest.type !== 'undefined' ? rawRequest.type : 'generic')\n    }\n    // setters\n    setData(data) {\n        this.data = data\n        return this\n    }\n    setMeta(key, val) {\n        this.meta[key] = val\n        return this\n    }\n    setId(id) {\n        this.id = id\n        return this\n    }\n    setType(type) {\n        this.type = type\n        return this\n    }\n    // getters\n    getData() {\n        return this.data\n    }\n    getMeta(key, defaultVal = null) {\n        if (typeof this.meta[key] !== 'undefined') {\n            return this.meta[key]\n        }\n        return defaultVal\n    }\n    getId(id) {\n        return this.id\n    }\n    getType(type) {\n        return this.type\n    }\n}","import Request from \"./request\";\n\nexport default class ServiceRequest extends Request {\n    constructor (rawRequest = null) {\n        super(rawRequest)\n        // if blank than we set the service\n        if (rawRequest === null) {\n            this.setType('service')\n        }\n    }\n\n    setServiceName(serviceName) {\n        this.setMeta('serName', serviceName)\n        return this\n    }\n\n    setServiceAction(serviceAction) {\n        this.setMeta('serAction', serviceAction)\n        return this\n    }\n\n    getServiceName() {\n        return this.getMeta('serName')\n    }\n\n    getServiceAction() {\n        return this.getMeta('serAction')\n    }\n}","export default class Response {\n    constructor (rawResponse = {}) {\n        this._messageType = 'res'\n        this.meta = (typeof rawResponse.meta !== 'undefined' && rawResponse.meta !== null ? rawResponse.meta : {})\n        this.data = (typeof rawResponse.data !== 'undefined' ? rawResponse.data : null)\n        this.id = (typeof rawResponse.id !== 'undefined' ? rawResponse.id : null)\n        this.type = (typeof rawResponse.type !== 'undefined' ? rawResponse.type : 'generic')\n        this.statusCode = (typeof rawResponse.statusCode !== 'undefined' ? rawResponse.statusCode : 200)\n        this.statusMessage = (typeof rawResponse.statusMessage !== 'undefined' ? rawResponse.statusMessage : 'success')\n    }\n\n    // setters\n    setData(data) {\n        this.data = data\n        return this\n    }\n    setMeta(key, val) {\n        this.meta[key] = val\n        return this\n    }\n    setId(id) {\n        this.id = id\n        return this\n    }\n    setType(type) {\n        this.type = type\n        return this\n    }\n    ss(code, message = null) {\n        this.statusCode = code\n        this.statusMessage = message\n        return this\n    }\n    ssSuccess(msg = 'success') {\n        this.statusCode = 200\n        this.statusMessage = msg\n        return this\n    }\n    ssClientError(msg = 'Client Error') {\n        this.statusCode = 400\n        this.statusMessage = msg\n        return this\n    }\n    ssClientErrorNotFound(msg = 'Client Error: Not Found') {\n        this.statusCode = 404\n        this.statusMessage = msg\n        return this\n    }\n    ssClientErrorInvalidRequest(msg = 'Client Error: Not Found') {\n        this.statusCode = 404\n        this.statusMessage = msg\n        return this\n    }\n    ssServerError(msg = 'Server Error') {\n        this.statusCode = 500\n        this.statusMessage = msg\n        return this\n    }\n\n    // getters\n    getData() {\n        return this.data\n    }\n    getMeta(key, defaultVal = null) {\n        if (typeof this.meta[key] !== undefined) {\n            return this.meta[key]\n        }\n        return defaultVal\n    }\n    getId(id) {\n        return this.id\n    }\n    getType(type) {\n        return this.type\n    }\n    getStatusCode() {\n        return this.statusCode\n    }\n    getStatusMessage() {\n        return this.statusMessage\n    }\n\n    // checkers\n    isStatusSuccess() {\n        if (this.statusCode >= 200 && this.statusCode <300) {\n            return true;\n        }\n        return false\n    }\n    isStatusError() {\n        if (this.statusCode >= 400 && this.statusCode <600) {\n            return true;\n        }\n        return false\n    }\n}","import Response from \"./response\";\n\nexport default class ServiceResponse extends Response {\n    constructor (rawRequest = {}) {\n        super(rawRequest)\n        this.setType('service')\n    }\n\n    setServiceName(serviceName) {\n        this.setMeta('serName', serviceName)\n        return this\n    }\n\n    setServiceAction(serviceAction) {\n        this.setMeta('serAction', serviceAction)\n        return this\n    }\n\n    getServiceName() {\n        return this.getMeta('serName')\n    }\n\n\n    getServiceAction() {\n        return this.getMeta('serAction')\n    }\n\n\n}","import socketclusterClient from 'socketcluster-client'\nimport ServiceRequest from '@vuxtra/shared-core/lib/core/serviceRequest'\nimport ServiceResponse from '@vuxtra/shared-core/lib/core/serviceResponse'\nimport _ from 'lodash'\n\nlet privateData = new WeakMap();\n\nvar $_internal\n\nexport default class VuxtraController {\n    constructor (options) {\n        this.socketclusterClient = socketclusterClient\n        this._internalRequestCounter = 1\n        this._internalSocketConnected = false\n        privateData.set(this, { options: options })\n        // privateData.get(this).options;\n        this.socket = this.socketclusterClient.connect({\n            port: options.port || 80,\n            hostname: options.hostname || 'localhost'\n        })\n        this.socket.on('connect', function () {\n            this._internalSocketConnected = true\n        });\n\n        var $_internalService = ( callArguments, options, action ) => {\n            return new Promise((resolve, reject)  => {\n                this.doBindOrExecute(() => {\n                    let request = new ServiceRequest()\n                    request.setServiceName(options)\n                        .setServiceAction(action)\n                        .setData(callArguments)\n                        .setId(this.socket.id + this._internalRequestCounter)\n                    this._internalRequestCounter++\n                    this.socket.emit('service.call', request, function (err, res) {\n                        if (err) {\n                            reject(err)\n                        } else {\n                            let response = new ServiceResponse(res)\n                            resolve(response)\n                        }\n                    })\n\n                })\n            })\n        }\n\n        this.services = require('.nuxt/clientVuxtra.js').services($_internalService, this)\n\n    }\n\n    doBindOrExecute(func) {\n        if(this._internalSocketConnected !== true) {\n            this.socket.on('connect', function () {\n                func();\n            });\n        }\n        else {\n            func();\n        }\n    }\n\n    /**\n     * Makes a realtime service call to the backend via socket\n     *\n     * @param requestFunc callback function / closure which gets ServiceRequest Object as it's first parameter (serviceRequest) => { serviceRequest.setData('hello') }\n     * @param data  payload to be passed to service method\n     * @returns {Promise}\n     */\n    async call (requestFunc) {\n\n\n        if (!_.isFunction(requestFunc)) {\n            throw Error('requestFunc [ first param ] must of function tyupe')\n        }\n        let request = new ServiceRequest()\n        requestFunc(request)\n        return new Promise((resolve, reject)  => {\n            this.socket.emit('service.call', request, function (err, res) {\n                if (err) {\n                    reject(err)\n                } else {\n                    let response = new ServiceResponse(res)\n                    resolve(response)\n                }\n            })\n        })\n    }\n}"],"names":["privateData","WeakMap","VuxtraController","options","socketclusterClient","_internalRequestCounter","_internalSocketConnected","set","socket","connect","port","hostname","on","$_internalService","callArguments","action","Promise","resolve","reject","doBindOrExecute","request","ServiceRequest","setServiceName","setServiceAction","setData","setId","id","emit","err","res","response","ServiceResponse","services","require","func","requestFunc","_","isFunction","Error"],"mappings":"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"}